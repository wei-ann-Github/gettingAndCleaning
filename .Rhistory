predict(fit2,data.frame(lstat=c(5,10,15)),interval="confidence")
predict(fit2,data.frame(lstat=c(5,10,15), age = 20),interval="confidence")
predict(fit2,data.frame(lstat=c(5,10,15), age = 10),interval="confidence")
predict(fit2,data.frame(lstat=c(5,10,15), age = 100),interval="confidence")
predict(fit2,data.frame(lstat=c(5,10,15), age = c(10,50,100),interval="confidence")
predict(fit2,data.frame(lstat=c(5,10,15), age = c(10,50,100)),interval="confidence")
?I
fit7=lm(medv~poly(lstat,4))
attach(Boston)
fit7=lm(medv~poly(lstat,4))
summary(fit7)
plot(medv~lstat)
points(lstat,fitted(fit7),col="blue",pch=20)
fit7
fix(Carseats)
fix(Carseats)
head(Carseats)
Carseats
library(MASS)
library(ISLR)
fix(Boston)
install.packages(c("ggplot2","caret"))
install.packages("randomforest")
install.packages("randomForest")
library(cluster)
?require
install.packages("ISLR")
require(ISLR)
?pair
?pairs
?col
names(Smarket)
pairs(Smarket,col=Smarket$Direction)
summary(Smarket)
names(Smarket)
contrasts(Smarket$Direction)
glm.fit=glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume,
data=Smarket,family=binomial)
glm.probs=predict(glm.fit,type="response")
glm.pred=ifelse(glm.probs>0.5,"Up","Down")
head(glm.pred)
head(glm.probs)
attach(Smarket)
table(glm.pred,Direction)
?table
mean(glm.pred==Direction)
mean(glm.fit[glm.pred==Direction])
head(glm.fit)
summary(glm.fit)
names(glm.fit)
mean(glm.fit$fitted.values[glm.pred==Direction])
mean(glm.pred==Direction)
?mean
count(glm.pred==direction)
length(glm.pred==direction)
count(glm.pred==Direction)
length(glm.pred==Direction)
length(glm.pred)
length(Direction)
tables(glm.pred == Direction)
table(glm.pred == Direction)
652/1250
mean(glm.pred==Direction)
?predict
install.packages("stats")
?stats
swirl()
library(swirl)
swirl()
?read.csv
read.csv(path2csv, stringAsFactors = FALSE)
mydf <- read.csv(path2csv, stringAsFactors = FALSE)
path2csv
mydf <- read.csv(path2csv, stringAsFactors = FALSE)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageversion("dplyr")
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
name(cran)
names(cran)
select(cran, -time)
select(cran, -5:20)
select(cran, -1:3)
select(cran, -x:size)
select(cran, -X:size)
select(cran, -(X:size)
)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), id_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- selection(cran, ip_id, package, size)
cran3 <- select(cran, ip_id, package, size)
crans
cran3
cran
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
cran3 <- mutate(cran, correct_size = size - 1000)
mutate(cran3, correct_size = size + 1000)
exit()
swirl()
html <- http://biostat.jhsph.edu/~jleek/contact.html
html <- "http://biostat.jhsph.edu/~jleek/contact.html"
con = url(html)
htmlCode = readLines(con)
html <- "http://biostat.jhsph.edu/~jleek/contact.html"
con = url(html)
htmlCode = readLines(con)
close(con)
htmlCode
htmlCode[10]
library(httr)
html2 <- GET(html)
content2 <- content(html2, as = "text")
parsedHtml = htmlParse(content2, asTest = TRUE)
xpathSApply(parsedHtml, "//title", xmlValue)
html <- "http://biostat.jhsph.edu/~jleek/contact.html"
html2 <- GET(html)
content2 <- content(html2, as = "text")
parsedHtml = htmlParse(content2, asTest = TRUE)
library(XML)
parsedHtml = htmlParse(content2, asTest = TRUE)
parsedHtml = htmlParse(content2, asText = TRUE)
xpathSApply(parsedHtml, "//title", xmlValue)
parsedHtml
htmlCode
htmlCode[10]
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[100])
file <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
donwload.file(file, "otherFormat.for")
download.file(file, "otherFormat.for")
getwd()
read.for("otherFormat.for")
otherFor <- read.tables("otherFormat.for", sep = " ")
otherFor <- read.table("otherFormat.for", sep = " ")
otherFor <- read.data("otherFormat.for", sep = " ")
otherFor <- read.file("otherFormat.for", sep = " ")
file <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
file_dl <- download.file(file, "otherFormat.for")
x <- read.fwf(file=file_dl, skip=4, widths=c(12, 7,4, 9,4, 9,4, 9,4))
x <- read.fwf(file_dl, skip=4, widths=c(12, 7,4, 9,4, 9,4, 9,4))
?read.fwf
download.file(file, "otherFormat.for")
file_dl <- "otherFormat.for"
x <- read.fwf(file_dl, skip=4, widths=c(12, 7,4, 9,4, 9,4, 9,4))
head(x)
lapply(x, sum)
str(x)
lapply(x[2:9], sum)
length(x)
lapply(x[4], sum)
head(x)
y <- read.fwf(file_dl, skip=4, widths=c(10, 7,4, 9,4, 9,4, 9,4))
head(y)
nchar(x[1,1])
nchar(x[2,1])
length(x[2,1])
nstr(x[2,1])
n(x[2,1])
x[2,1]
x[3,1]
y <- read.fwf(file_dl, skip=4, widths=c(14, 5,4, 9,4, 9,4, 9,4))
head(y)
head(x)
y <- read.fwf(file_dl, skip=4, widths=c(10, 9,4, 9,4, 9,4, 9,4))
head(y)
x[1,3]
file <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv""
download.file(file,"q3_1.csv")
file <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(file,"q3_1.csv")
q3.1 <- read.csv("q3_1.csv")
library(dplyr)
str(q3.1)
q3.1$agricultureLogical <- q3.1[which(ACR >3 & AGS == 6),]
q3.1$agricultureLogical <- q3.1[which(q3.1$ACR >3 & q3.1$AGS == 6),]
agricultureLogical <- q3.1[which(q3.1$ACR >3 & q3.1$AGS == 6),]
head(agricultureLogical, 3)
head(agricultureLogical, n = 3)
?head
agricultureLogical <- q3.1[which(q3.1$ACR == 3 & q3.1$AGS == 6),]
head(agricultureLogical, n = 3)
str(agricultureLogical)
?rowname
?row.name
?row.names
row.names(agricultureLogical)
install.packages("jpeg")
library(jpeg)
?read.jpg
?jpg
?jpeg
jpeg(jpg, native = TRUE)
jpeg(jpg)
jpg <- https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg
jpg <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
jpeg(jpg)
?readJPEG
readJPEG(jpg, TRUE)
jpg <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg","jeff.jpg")
readJPEG(jpg, TRUE)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg","jeff.jpg")
jpg.file <- "jeff.jpg"
readJPEG(jpg.file, TRUE)
readJPEG(jpg.file)
pic <- readJPEG(jpg.file, TRUE)
summary(pic)
quantile(pic, probs = c(0.3, 0.8, 0.7, 0.2))
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg","jeff.jpg")
jpg.file <- "jeff.jpg"
pic <- readJPEG(jpg.file, TRUE)
jpg.file <- "jeff.jpg"
jpg.file <- "jeff.jpg"
pic <- readJPEG(jpg.file, TRUE)
?download.file
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg","jeff.jpg", mode = "wb")
jpg.file <- "jeff.jpg"
pic <- readJPEG(jpg.file, TRUE)
quantile(pic, probs = c(0.3, 0.8, 0.7, 0.2))
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
file <- download.file(url, dest = "GDP.csv")
gdp <- read.csv(file)
file <- "GDP.csv"
gdp <- read.csv(file)
summary(gdp)
swirl()
library(swirl)
swirl()
library(tidyr)
students
?gather
gather(students, sex, count, 2:3)
gather(students, sex, count, -grade)
students2
res(students2, sex_class, count, -grade)
res <-  gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, into = c("sex", "class")
)
submit()
students3
?gather
submit()
submit()
submit()
?spread
submit()
submit()
extract_numeric("class5")
submit()
students4
submit()
submit()
?unique
submit()
passed
failed
mutate(passed, status = "passed", passed = status)
passed <- passed %>% mutate(status = "passed")
passed
failed <- failed %>% mutate(status = "failed")
bind_rows(passed, failed)
sat
?select
?separate
submit()
submit()
submit()
submit()
submit()
students2
str(train.data[2])
rm(list=ls())
test.dir <- "./UCI HAR Dataset/test"
test.files <- list.files(test.dir, full.names = TRUE)
test.signal.file <- list.files(test.files[1], full.names = TRUE)
library(data.table)
merge_dt = data.table()
merged_dt = data.table()
merged_test_dt = data.table()
rm(merge_dt)
rm(merged_dt)
merged_test_dt = data.table(read.table(test.files[2]))
merged_test_dt <- data.table
merged_test_dt <- data.table(read.table(test.files[2]))
str(test.files)
test.dir <- "./UCI HAR Dataset/test"
test.files <- list.files(test.dir, full.names = TRUE)
test.signal.file <- list.files(test.files[1], full.names = TRUE)
str(test.files)
test.files
train.dir <- "./UCI HAR Dataset/train"
train.files <- list.files(train.dir, full.names = TRUE)
train.files
library(dplyr)
library(tidyr)
library(data.table)
test.dir <- "./UCI HAR Dataset/test"
test.files <- list.files(test.dir, full.names = TRUE)
test.files
test.signal.file <- list.files(test.files[1], full.names = TRUE)
getwd()
setwd("./github/gettingAndCleaning")
test.dir <- "./UCI HAR Dataset/test"
test.files <- list.files(test.dir, full.names = TRUE)
test.signal.file <- list.files(test.files[1], full.names = TRUE)
test.files
merged_test_dt <- data.table
merged_test_dt <- data.table(read.table(test.files[2]))
str(merged_test_dt)
dim(merged_test_dt)
for (i in 3){
merged_test_dt <- merge(merged_test_dt, data.table(read.table(test.files[i])))
dim(merged_test_dt)
}
for (i in 3){
merged_test_dt <- cbind(merged_test_dt, data.table(read.table(test.files[i])))
dim(merged_test_dt)
}
dim(merged_test_dt)
i_dt <- data.table(read.table(test.files[3]))
dim(i_dt)
names(i_dt)
table(is.na(i_dt))
for (i in 3:4){
merged_test_dt <- cbind(merged_test_dt, data.table(read.table(test.files[i])))
}
str(merged_test_dt)
dim(merged_test_dt)
dim(merged_test_dt)
dim(data.table(read.table(test.files[3])))
dim(data.table(read.table(test.files[4])))
merged_test_dt <- data.table
merged_test_dt <- data.table(read.table(test.files[2]))
for (i in 3:4){
merged_test_dt <- cbind(merged_test_dt, data.table(read.table(test.files[i])))
}
dim(merged_test_dt)
names(merged_test_dt) <- c("subject", names(merged_test_dt)[c(-1,-563),], "Activity")
names(merged_test_dt) <- c("subject", names(merged_test_dt)[c(-1,-563)], "Activity")
names(merged_test_dt)
test.signal.file <- list.files(test.files[1], full.names = TRUE)
signal_test_dt <- data.table(read.table(test.signal.file[1]))
dim(signal_test_dt)
length(test.signal.file)
for (i in 1:length(test.signal.file)){
dim(data.table(read.table(test.files[i])))
}
signal_test_dt <- data.table(read.table(test.signal.file[1]))
for (i in 1:length(test.signal.file)){
tmp <- data.table(read.table(test.files[i]))
dim(tmp)
}
length(test.signal.file)
signal_test_dt <- data.table()
dim(signal_test_dt)
length(test.signal.file)
tmp <- data.table(read.table(test.files[2]))
dim(tmp)
for (i in 1:length(test.signal.file)){
tmp <- data.table(read.table(test.signal.file[i]))
dim(tmp)
}
for (i in 1:length(test.signal.file)){
tmp <- data.table(read.table(test.signal.file[i]))
print(dim(tmp))
}
dim(merged_test_dt)
summary(merged_test_dt[,1])
str(merged_test_dt[,1])
tail(merged_test_dt[,1])
dim(merged_test_dt)
merged_test_dt[,1]
merged_test_dt
summary(merged_test_dt)
train.dir <- "./UCI HAR Dataset/train"
train.files <- list.files(train.dir, full.names = TRUE)
train.signal.file <- list.files(train.files[1], full.names = TRUE)
merged_train_dt <- data.table
merged_train_dt <- data.table(read.table(train.files[2]))
dim(merged_train_dt)
for (i in 3:4){
merged_train_dt <- cbind(merged_train_dt, data.table(read.table(train.files[i])))
}
dim(merged_train_dt)
merged_all_dt <- rbind(merged_train_dt, merged_test_dt)
dim(merged_train_dt)
dim(merged_test_dt)
dim(merged_test_dt)
rm(list=ls())
# get the files names in the train dataset
train.dir <- "./UCI HAR Dataset/train"
train.files <- list.files(train.dir, full.names = TRUE)
train.signal.file <- list.files(train.files[1], full.names = TRUE)
# get the files names in the test dataset
test.dir <- "./UCI HAR Dataset/test"
test.files <- list.files(test.dir, full.names = TRUE)
test.signal.file <- list.files(test.files[1], full.names = TRUE)
# read files in train dataset
merged_train_dt <- data.table
merged_train_dt <- data.table(read.table(train.files[2]))
dim(merged_train_dt)
for (i in 3:4){
merged_train_dt <- cbind(merged_train_dt, data.table(read.table(train.files[i])))
}
dim(merged_train_dt)
# read files in test dataset
merged_test_dt <- data.table
merged_test_dt <- data.table(read.table(test.files[2]))
dim(merged_test_dt)
for (i in 3:4){
merged_test_dt <- cbind(merged_test_dt, data.table(read.table(test.files[i])))
}
dim(merged_test_dt)
merged_all_dt <- rbind(merged_train_dt, merged_test_dt)
rm(c(merged_train_dt, merged_test_dt))
rm(merged_test_dt)
rm((merged_train_dt)
rm(merged_train_dt)
names(merged_all_dt) <- c("subject", names(merged_all_dt)[c(-1,-563)], "Activity")
names(merged_all_dt)
setnames(merged_all_dt, names(merged_all_dt)[1], "new name")
names(merged_all_dt)
setnames(merged_all_dt, c(names(merged_all_dt)[1],names(merged_all_dt)[563]), c("subject","act"))
names(merged_all_dt)
setnames(merged_all_dt, names(merged_all_dt)[c(1, 563)], c("Subject","Activity"))
names(merged_all_dt)
mean_and_sd <- select(merged_all_dt, c(1, 2:4 ,563))
names(mean_and_sd)
feat.txt <- "./UCI HAR Dataset/features.txt"
features <- read.text(feat.txt)
features <- read.table(feat.txt)
names(features)
features
table(features[features[,2] %in% c("mean", "std"),])
features[features[,2] %in% c("mean", "std"),]
class(features)
feature[features[,2] %in% "mean",]
features[features[,2] %in% "mean",]
class(features)
features[features[,2] %in% "mean",]
features[ "mean" %in% features[,2],]
"mean" %in% "mean you"
"mean you" %in% "mean"
class(feature[1,2])
class(features[1,2])
features[ "mean" %in% as.character(features[,2]),]
class(as.character(features[1,2]))
features[1,2]
?find
class(features)
names(features)
grep("mean", features[,2])
grep(c("mean","std", features[,2])
grep(c("mean","std"), features[,2])
grep("std", features[,2])
mean_ind <- grep("mean", features[,2])
sd_ind <- grep("std", features[,2])
"a" + "b"
?append
sd_ind <- grep("std", features[,2]) + 1
sd_ind
mean_sd_ind <- bind(mean_ind,sd_ind)
mean_sd_ind <- combine(mean_ind,sd_ind)
mean_sd_id
mean_sd_ind
sort(mean_sd_ind)
mean_and_sd <- select(merged_all_dt, c(1, mean_sd_ind, 563))
names(mean_and_sd)
mean_sd_ind <- sort(mean_sd_ind)
mean_and_sd <- select(merged_all_dt, c(1, mean_sd_ind, 563))
names(mean_and_sd)
mean_ind <- grep("mean", features[,2]) + 1
mean_ind
mean_sd_ind
mean_ind <- grep("mean", features[,2]) + 1
sd_ind <- grep("std", features[,2]) + 1
mean_sd_ind <- combine(mean_ind,sd_ind)
mean_sd_ind <- sort(mean_sd_ind)
mean_sd_ind
mean_and_sd <- select(merged_all_dt, c(1, mean_sd_ind, 563))
names(mean_and_sd)
